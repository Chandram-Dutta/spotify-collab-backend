services:
  api:
    build: .
    ports:
      - 127.0.0.1:8080:8080
    environment:
      - DB_HOST=psql
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_PORT=${DB_PORT}
      - PORT=8080
      - ENV="production"
    depends_on:
      - psql
      - migrate
    restart: always
    networks:
      - spotify-collab-network

  psql:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - psql_volume:/var/lib/postgresql/data
    networks:
      - spotify-collab-network

  migrate:
    image: migrate/migrate
    depends_on:
      - psql     
    restart: on-failure
    volumes:
      - ./internal/database/migrations:/migrations 
    command: ["-path", "/migrations", "-database", "postgres://${DB_USERNAME}:${DB_PASSWORD}@psql:${DB_PORT}/${DB_DATABASE}?sslmode=disable", "up"]
    links:
      - psql
    networks:
      - spotify-collab-network

volumes:
  psql_volume:

networks:
  spotify-collab-network: